version: '3.7'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: volume
        source: data
        target: /usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk
    healthcheck:
      start_period: 30s
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 15s
      timeout: 3s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elk/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - elk
    healthcheck:
      start_period: 30s
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 15s
      timeout: 3s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    container_name: logstash
    entrypoint: /usr/share/logstash/logstash-entrypoint.sh
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./elk/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./elk/elasticsearch-template.json:/usr/share/logstash/config/elasticsearch-template.json
      - ./elk/pipeline:/usr/share/logstash/pipeline:ro
      - ./elk/logstash-entrypoint.sh:/usr/share/logstash/logstash-entrypoint.sh
      - ./wait-for-it.sh:/usr/share/logstash/wait-for-it.sh
    ports:
      - 9600:9600
    networks:
      - elk
    healthcheck:
      start_period: 30s
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 15s
      timeout: 3s
      retries: 5

  news-crawler:
    build:
      context: news-crawler
    image: news-crawler
    container_name: news-crawler
    volumes:
      - type: volume
        source: news-data
        target: /usr/src/app/data
      - type: volume
        source: news-logs
        target: /usr/src/app/logs
      - ./wait-for-it.sh:/usr/src/app/wait-for-it.sh
    networks:
      - elk

  twitter-crawler:
    build:
      context: twitter-crawler
    image: twitter-crawler
    container_name: twitter-crawler
    env_file:
      - twitter-crawler/.env
    volumes:
      - type: volume
        source: twitter-data
        target: /usr/src/app/data
      - type: volume
        source: twitter-logs
        target: /usr/src/app/logs
      - ./wait-for-it.sh:/usr/src/app/wait-for-it.sh
    networks:
      - elk

volumes:
  data:
    driver: local
  news-data:
    driver: local
  news-logs:
    driver: local
  twitter-data:
    driver: local
  twitter-logs:
    driver: local

networks:
  elk:
    driver: bridge
